version: '3.7'

services:
  models:
    build: models
    image: ml-boilerplate/models
    env_file:
      - .env
    ports:
      - "${MLFLOW_PORT}:${MLFLOW_PORT}"

  db:
    image: postgres
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    env_file:
      - .env
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    command: -p ${POSTGRES_PORT}

  api:
    build: api
    image: ml-boilerplate/api
    command: sh -c "flask db init || true &&
      flask db migrate &&
      flask db upgrade &&
      flask run --host=0.0.0.0 --port=${API_PORT}"
#   volumes:
#      - ./api:/backend
    environment:
      - FLASK_ENV=development
      - FLASK_APP=app.py
      - GRANT_CORS_ACCESS=http://localhost:${UI_PORT}
      - MLFLOW_ENDPOINT=http://models:${MLFLOW_PORT}/invocations
      - DB_ENDPOINT=postgresql://postgres:postgres@db:${POSTGRES_PORT}
    env_file:
      - .env
    ports:
      - "${API_PORT}:${API_PORT}"
    depends_on:
      - models
      - db

  client:
    build: client
    image: ml-boilerplate/client
    command: ["npm", "start", "--port ${UI_PORT}"]
#   volumes:
#      - ./client:/frontend
#      - node-modules:/frontend/node_modules
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:${API_PORT}/api/v1.0
    env_file:
      - .env
    ports:
      - '${UI_PORT}:${UI_PORT}'
    depends_on:
      - api

#volumes:
#  node-modules: